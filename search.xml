<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>修改host解决gist.github.com无法访问的问题</title>
      <link href="/2019/11/27/access-gist/"/>
      <url>/2019/11/27/access-gist/</url>
      
        <content type="html"><![CDATA[<p>修改<code>hosts</code>文件，添加以下内容</p><pre class=" language-bash"><code class="language-bash">192.30.253.118 gist.github.com192.30.253.119 gist.github.com</code></pre><p><code>hosts</code>文件路径</p><ul><li>Windows: <code>C:\Windows\System32\drivers\etc\hosts</code></li><li>Linux: <code>/etc/hosts</code></li></ul>]]></content>
      
      
      <categories>
          
          <category> Questions </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gist </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在Linux上安装Miniconda</title>
      <link href="/2019/11/27/miniconda-install/"/>
      <url>/2019/11/27/miniconda-install/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Anaconda是一个开源的Python包管理器，而Miniconda则是轻量级的Anaconda</p></blockquote><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p><a href="https://docs.conda.io/en/latest/miniconda.html" target="_blank" rel="noopener">官网地址</a></p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token function">wget</span><span class="token function">wget</span> https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh</code></pre><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><pre class=" language-bash"><code class="language-bash"><span class="token function">bash</span> Miniconda3-latest-Linux-x86_64.sh</code></pre><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 一直按回车然后输入yes</span>please answer <span class="token string">'yes'</span> or <span class="token string">'no'</span><span class="token keyword">:</span><span class="token operator">>></span><span class="token operator">></span> <span class="token function">yes</span><span class="token comment" spellcheck="true"># 选择安装路径, 文件名前加点号表示隐藏文件</span>Miniconda3 will now be installed into this location:<span class="token operator">>></span><span class="token operator">></span> ~/.miniconda3<span class="token comment" spellcheck="true"># 添加配置信息到 ~/.bashrc文件</span>Do you wish the installer to initialize Miniconda3 by running conda init? <span class="token punctuation">[</span>yes<span class="token operator">|</span>no<span class="token punctuation">]</span><span class="token punctuation">[</span>no<span class="token punctuation">]</span> <span class="token operator">>></span><span class="token operator">></span> <span class="token function">yes</span></code></pre><p>运行配置信息文件或重启电脑</p><pre class=" language-bash"><code class="language-bash"><span class="token function">source</span> ~/.bashrc</code></pre><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>测试是否安装成功</p><pre class=" language-bash"><code class="language-bash">conda --version</code></pre><p>创建虚拟环境</p><pre class=" language-bash"><code class="language-bash">conda create -n venv python<span class="token operator">=</span>3.6</code></pre><p>激活虚拟环境</p><pre class=" language-bash"><code class="language-bash">conda activate venv</code></pre><p>退出虚拟环境</p><pre class=" language-bash"><code class="language-bash">conda deactivate</code></pre>]]></content>
      
      
      <categories>
          
          <category> Package </category>
          
      </categories>
      
      
        <tags>
            
            <tag> install </tag>
            
            <tag> conda </tag>
            
            <tag> linux </tag>
            
            <tag> ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Gitolite搭建Git服务器</title>
      <link href="/2019/11/27/gitolite/"/>
      <url>/2019/11/27/gitolite/</url>
      
        <content type="html"><![CDATA[<h2 id="运行环境"><a href="#运行环境" class="headerlink" title="运行环境"></a>运行环境</h2><ul><li>Ubuntu18.04</li><li>Gitolite</li></ul><h2 id="1-在云服务上选择合适的镜像-创建好实例"><a href="#1-在云服务上选择合适的镜像-创建好实例" class="headerlink" title="1. 在云服务上选择合适的镜像, 创建好实例"></a>1. 在云服务上选择合适的镜像, 创建好实例</h2><h2 id="2-启动实例更新系统"><a href="#2-启动实例更新系统" class="headerlink" title="2. 启动实例更新系统"></a>2. 启动实例更新系统</h2><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> apt update<span class="token function">sudo</span> apt upgrade</code></pre><h2 id="3-安装-Vim"><a href="#3-安装-Vim" class="headerlink" title="3. 安装 Vim"></a>3. 安装 Vim</h2><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> apt <span class="token function">install</span> vim</code></pre><h2 id="4-安装-Git"><a href="#4-安装-Git" class="headerlink" title="4. 安装 Git"></a>4. 安装 Git</h2><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> apt <span class="token function">install</span> <span class="token function">git</span></code></pre><h2 id="5-创建用户"><a href="#5-创建用户" class="headerlink" title="5. 创建用户"></a>5. 创建用户</h2><ul><li>创建git用户: <code>sudo adduser git</code></li><li>切换到git用户: <code>su git</code></li><li>进入git用户目录: <code>cd ~</code></li></ul><h2 id="6-安装-Gitolite"><a href="#6-安装-Gitolite" class="headerlink" title="6. 安装 Gitolite"></a>6. 安装 Gitolite</h2><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/sitaramc/gitolite<span class="token function">mkdir</span> -p <span class="token variable">$HOME</span>/bingitolite/install -to <span class="token variable">$HOME</span>/bin</code></pre><h2 id="7-注册仓库管理员"><a href="#7-注册仓库管理员" class="headerlink" title="7. 注册仓库管理员"></a>7. 注册仓库管理员</h2><ul><li><p>新建<code>YourName.pub</code>文件，将客户端公钥<code>.ssh/id_rsa.pub</code>复制到里面，然后注册为仓库管理员</p><pre class=" language-bash"><code class="language-bash">  vim YourName.pub  <span class="token comment" spellcheck="true"># 复制客户端公钥内容，按:wq保存退出</span>  <span class="token variable">$HOME</span>/bin/gitolite setup -pk YourName.pub <span class="token comment" spellcheck="true"># 注册仓库管理员</span></code></pre><p>  建议在服务器上新建<code>admin</code>用户作为仓库管理员</p></li><li><p>新建管理员用户<code>admin</code></p><pre class=" language-bash"><code class="language-bash"> <span class="token function">sudo</span> adduser admin</code></pre></li><li><p>生成<code>SSH</code>公钥</p><pre class=" language-bash"><code class="language-bash"> <span class="token function">su</span> admin ssh-keygen -t rsa -C <span class="token string">"youremail@example.com"</span> <span class="token function">cp</span> .ssh/id_rsa.pub /tmp/admin.pub</code></pre></li><li><p>切回<code>git</code>用户，将<code>admin</code>用户注册为仓库管理员</p><pre class=" language-bash"><code class="language-bash">  <span class="token function">su</span> <span class="token function">git</span>  <span class="token function">cd</span> ~  <span class="token variable">$HOME</span>/bin/gitolite setup -pk /tmp/admin.pub</code></pre><p>  注册管理员后会生成两个文件<code>projects.list</code>, <code>repositories/</code><br>  <code>projects.list</code> 保存仓库信息列表<br>  <code>repositories/</code> 文件夹里有管理员仓库<code>gitolite-admin.git/</code> 和测试仓库<code>testing.git/</code><br>  新建的仓库都会保存在<code>repositories/</code> 文件夹中  </p></li></ul><h2 id="8-管理远程仓库"><a href="#8-管理远程仓库" class="headerlink" title="8. 管理远程仓库"></a>8. 管理远程仓库</h2><ul><li><p>在已经注册过的客户端克隆管理员仓库</p><pre class=" language-bash"><code class="language-bash">  <span class="token function">git</span> clone git@host:gitolite-admin</code></pre><p>  管理员仓库里有两个文件<code>conf/gitolite.conf</code> 和 <code>keydir/</code><br>  <code>gitolite.conf</code> 管理仓库信息<br>  <code>keydir/</code> 保存<code>git</code>成员的公钥  </p></li><li><p>添加新成员: 将新成员的公钥保存到<code>keydir/</code> 下</p></li><li><p>新建仓库</p><p>  修改<code>conf/gitolite.conf</code> 文件，添加<code>newrepo</code>仓库</p><pre class=" language-conf"><code class="language-conf">  repo gitolite-admin          RW+     =   admin  repo testing          RW+     =   @all  repo newrepo          RW+     =   @all</code></pre></li><li><p>添加仓库管理员</p><pre class=" language-conf"><code class="language-conf">  repo gitolite-admin      RW+     =   admin      RW+     =   lin-zone  repo testing      RW+     =   @all  repo newrepo      RW+     =   @all</code></pre></li></ul><h2 id="9-将仓库信息推送到服务器"><a href="#9-将仓库信息推送到服务器" class="headerlink" title="9. 将仓库信息推送到服务器"></a>9. 将仓库信息推送到服务器</h2><p>在客户端更新完仓库信息后，需要将其推送到服务器才能生效</p><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> add <span class="token keyword">.</span><span class="token function">git</span> commit -m <span class="token string">"commit message"</span><span class="token function">git</span> push origin master</code></pre><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://github.com/sitaramc/gitolite" target="_blank" rel="noopener">sitaramc/gitolite</a></p>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> server </tag>
            
            <tag> install </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VirtualBox 启动错误</title>
      <link href="/2019/11/15/virtualbox-error/"/>
      <url>/2019/11/15/virtualbox-error/</url>
      
        <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>Call to WHvSetupPartition failed: ERROR_SUCCESS (Last=0xc000000d/87) (VERR_NEM_VM_CREATE_FAILED).</p><p><img src="https://github.com/lin-zone/lin-zone.github.io/blob/hexo/source/images/VirtualBoxError.png?raw=true" alt="VirtualBoxError"></p><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><p>在 Windows10下开启了Hyper-V功能, 需关闭Hyper-V并重启两次</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.virtualbox.org/ticket/18536" target="_blank" rel="noopener">Ticket #18536</a></p>]]></content>
      
      
      <categories>
          
          <category> Questions </category>
          
      </categories>
      
      
        <tags>
            
            <tag> error </tag>
            
            <tag> hyper-v </tag>
            
            <tag> window10 </tag>
            
            <tag> virtualbox </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hadoop Single Node Cluster 的安装</title>
      <link href="/2019/11/15/hadoop-single-node-cluster/"/>
      <url>/2019/11/15/hadoop-single-node-cluster/</url>
      
        <content type="html"><![CDATA[<ol><li><p>安装 JDK</p><ul><li><p>使用 apt-get 安装 JDK</p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> default-jdk</code></pre></li><li><p>查询 Java 版本</p><pre class=" language-bash"><code class="language-bash">java -version</code></pre></li><li><p>查询 Java 安装路径</p><pre class=" language-bash"><code class="language-bash">update-alternatives --display java</code></pre></li></ul></li><li><p>设置 SSH 无密码登陆</p><ul><li><p>安装 SSH</p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token function">ssh</span></code></pre></li><li><p>产生 SSH Key</p><pre class=" language-bash"><code class="language-bash">ssh-keygen -t rsa -P <span class="token string">''</span> -f ~/.ssh/id_rsa</code></pre></li><li><p>将产生的 Key 放置到许可证文件在中</p><pre class=" language-bash"><code class="language-bash"><span class="token function">cat</span> ~/.ssh/id_dsa.pub <span class="token operator">>></span> ~/.ssh/authorized_keys<span class="token function">chmod</span> 0600 ~/.ssh/authorized_keys</code></pre></li><li><p>安装 openssh-server</p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> openssh-server</code></pre></li><li><p>查看是否安装成功</p><pre class=" language-bash"><code class="language-bash"><span class="token function">ps</span> -e<span class="token operator">|</span><span class="token function">grep</span> <span class="token function">ssh</span></code></pre></li></ul></li><li><p>下载安装 Hadoop</p><ul><li><p>到 <a href="https://hadoop.apache.org/releases.html" target="_blank" rel="noopener">官网</a> 复制下载链接</p></li><li><p>执行下载命令</p><pre class=" language-bash"><code class="language-bash"><span class="token function">wget</span> http://mirrors.tuna.tsinghua.edu.cn/apache/hadoop/common/hadoop-2.10.0/hadoop-2.10.0.tar.gz</code></pre></li><li><p>解压缩</p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">tar</span> -zxvf hadoop-2.10.0.tar.gz</code></pre></li><li><p>将 Hadoop 移动到 <code>/usr/local</code></p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">mv</span> hadoop-2.10.0 /usr/local/hadoop</code></pre></li><li><p>查看 Hadoop 安装目录 <code>/usr/local/hadoop</code></p><pre class=" language-bash"><code class="language-bash">ll /usr/local/hadoop</code></pre></li></ul></li><li><p>设置 Hadoop 环境变量</p><ul><li><p>修改 <code>~/.bashrc</code>, 添加以下内容</p><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 设置JDK安装路径</span><span class="token function">export</span> JAVA_HOME<span class="token operator">=</span>/usr/lib/jvm/java-11-openjdk-amd64<span class="token comment" spellcheck="true"># 设置Hadoop安装路径</span><span class="token function">export</span> HADOOP_HOME<span class="token operator">=</span>/usr/local/hadoop<span class="token comment" spellcheck="true"># 设置PATH</span><span class="token function">export</span> PATH<span class="token operator">=</span><span class="token variable">$PATH</span><span class="token keyword">:</span><span class="token variable">$HADOOP_HOME</span>/bin<span class="token function">export</span> PATH<span class="token operator">=</span><span class="token variable">$PATH</span><span class="token keyword">:</span><span class="token variable">$HADOOP_HOME</span>/sbin<span class="token comment" spellcheck="true"># 设置Hadoop其他环境变量</span><span class="token function">export</span> HADOOP_MAPRED_HOME<span class="token operator">=</span><span class="token variable">$HADOOP_HOME</span><span class="token function">export</span> HADOOP_COMMON_HOME<span class="token operator">=</span><span class="token variable">$HADOOP_HOME</span><span class="token function">export</span> HADOOP_HDFS_HOME<span class="token operator">=</span><span class="token variable">$HADOOP_HOME</span><span class="token function">export</span> YARN_HOME<span class="token operator">=</span><span class="token variable">$HADOOP_HOME</span><span class="token comment" spellcheck="true"># 链接库的相关设置</span><span class="token function">export</span> HADOOP_COMMON_LIB_NATIVE_DIR<span class="token operator">=</span><span class="token variable">$HADOOP_HOME</span>/lib/native<span class="token function">export</span> HADOOP_OPTS<span class="token operator">=</span><span class="token string">"-Djava.library.path=<span class="token variable">$HADOOP_HOME</span>/lib"</span><span class="token function">export</span> JAVA_LIBRARY_PATH<span class="token operator">=</span><span class="token variable">$HADOOP_HOME</span>/lib/native:<span class="token variable">$JAVA_LIBRARY_PATH</span></code></pre></li><li><p>让 <code>~/.bashrc</code> 设置生效</p><pre class=" language-bash"><code class="language-bash"><span class="token function">source</span> ~/.bashrc</code></pre></li></ul></li><li><p>修改 Hadoop 配置设置文件</p><ul><li><p>编辑 <code>hadoop-dev.sh</code></p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> gedit /usr/local/hadoop/etc/hadoop/hadoop-env.sh</code></pre><pre class=" language-sh"><code class="language-sh">export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64</code></pre></li><li><p>修改 <code>core-site.xml</code></p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> gedit /usr/local/hadoop/etc/hadoop/core-site.xml</code></pre><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>fs.defaultFS<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>hdfs://localhost:9000<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span></code></pre></li><li><p>修改 <code>hdfs-site.xml</code></p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> gedit /usr/local/hadoop/etc/hadoop/hdfs-site.xml</code></pre><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>dfs.replication<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>dfs.namenode.name.dir<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>file:/usr/local/hadoop/hadoop_data/hdfs/namenode<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>dfs.datanode.data.dir<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>file:/usr/local/hadoop/hadoop_data/hdfs/datanode<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span></code></pre></li><li><p>创建并格式化 HDFS 目录</p><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 创建namenode数据存储目录</span><span class="token function">sudo</span> <span class="token function">mkdir</span> -p /usr/local/hadoop/hadoop_data/hdfs/namenode<span class="token comment" spellcheck="true"># 创建datanode数据存储目录</span><span class="token function">sudo</span> <span class="token function">mkdir</span> -p /usr/local/hadoop/hadoop_data/hdfs/datanode<span class="token comment" spellcheck="true"># 将数据所有者更改为hduser</span><span class="token function">sudo</span> <span class="token function">chown</span> hduser:hduser -R /usr/local/hadoop<span class="token comment" spellcheck="true"># 格式化namenode</span>hadoop namenode -format</code></pre></li><li><p>启动 HDFS</p><pre class=" language-bash"><code class="language-bash">start-dfs.sh</code></pre></li><li><p>修改 <code>yarn-site.xml</code></p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> gedit /usr/local/hadoop/etc/hadoop/yarn-site.xml</code></pre><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.nodemanager.aux-services<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>mapreduce_shuffle<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.nodemanager.aux-services.mapreduce.shuffle.class<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>org.apache.hadoop.mapred.ShuffleHandler<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span></code></pre></li><li><p>设置 <code>mapred-site.xml</code></p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">cp</span> /usr/local/hadoop/etc/hadoop/mapred-site.xml.template /usr/local/hadoop/etc/hadoop/mapred-site.xml<span class="token function">sudo</span> gedit /usr/local/hadoop/etc/hadoop/mapred-site.xml</code></pre><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>mapreduce.framework.name<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>yarn<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>mapreduce.application.classpath<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>$HADOOP_MAPRED_HOME/share/hadoop/mapreduce/*:$HADOOP_MAPRED_HOME/share/hadoop/mapreduce/lib/*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span></code></pre></li><li><p>启动 YARN</p><pre class=" language-bash"><code class="language-bash">start-yarn.sh</code></pre></li><li><p>同时启动 HDFS 和 YARN</p><pre class=" language-bash"><code class="language-bash">start-all.sh</code></pre></li><li><p>查看已启动的进程</p><pre class=" language-bash"><code class="language-bash">jps</code></pre></li><li><p>HDFS 功能</p><ul><li>NameNode</li><li>SecondaryNameNode</li><li>DataNode</li></ul></li><li><p>MapReduce2(YARN)</p><ul><li>ResourceManager</li><li>NodeManager</li></ul></li></ul></li><li><p>打开 Hadoop Resource-Manager Web 界面</p><p> <a href="http://localhost:8088/" target="_blank" rel="noopener">localhost:8080</a></p></li></ol><p>参考</p><ul><li><a href="https://hadoop.apache.org/docs/stable/hadoop-project-dist/hadoop-common/SingleCluster.html#Installing_Software" target="_blank" rel="noopener">Setting up a Single Node Cluster</a></li><li><a href="http://blog.sina.com.cn/s/blog_1618db3120102w7wa.html" target="_blank" rel="noopener">Hadoop 2.6 Single Node Cluster 安裝指令</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Hadoop </category>
          
      </categories>
      
      
        <tags>
            
            <tag> install </tag>
            
            <tag> hadoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>poetry 使用</title>
      <link href="/2019/10/23/poetry/"/>
      <url>/2019/10/23/poetry/</url>
      
        <content type="html"><![CDATA[<p><a href="https://poetry.eustace.io/docs/" target="_blank" rel="noopener">官方文档</a></p><h2 id="安装-poetry"><a href="#安装-poetry" class="headerlink" title="安装 poetry"></a>安装 poetry</h2><p><code>pip install poetry</code></p><h2 id="poetry-命令"><a href="#poetry-命令" class="headerlink" title="poetry 命令"></a>poetry 命令</h2><ul><li>更新 poetry</li></ul><p><code>poetry self:update</code></p><ul><li>创建新项目</li></ul><p><code>poetry new &lt;project&gt;</code></p><ul><li>添加包</li></ul><p><code>poetry add &lt;package_name&gt;</code></p><ul><li>删除包</li></ul><p><code>poetry remove &lt;package_name&gt;</code></p><ul><li>安装包</li></ul><p><code>poetry install</code></p><ul><li>显示包信息</li></ul><p><code>poetry show</code></p><ul><li>打包</li></ul><p><code>poetry build</code></p><ul><li>发布到 PyPI</li></ul><p><code>poetry publish</code></p><ul><li>发布到个人仓库</li></ul><p><code>poetry publish -r &lt;my-repository&gt;</code></p><ul><li>创建<code>pyproject.toml</code>文件</li></ul><p><code>poetry init</code></p><ul><li>显示配置信息</li></ul><p><code>poetry config --list</code></p><ul><li>在虚拟环境中运行</li></ul><p><code>poetry run python -V</code></p><ul><li>生成 shell</li></ul><p><code>poetry shell</code></p><ul><li>检查项目结构</li></ul><p><code>poetry check</code></p><ul><li>不安装<code>pyproject.toml</code>指定的依赖</li></ul><p><code>poetry lock</code></p><ul><li>更新项目版本</li></ul><p><code>poetry version &lt;rule&gt;</code></p><blockquote><p>rule 可以是 <code>patch, minor, major, prepatch, preminor, premajor, prerelease</code></p></blockquote><h2 id="pyproject-toml-文件"><a href="#pyproject-toml-文件" class="headerlink" title="pyproject.toml 文件"></a>pyproject.toml 文件</h2><ul><li>定义脚本</li></ul><pre class=" language-toml"><code class="language-toml">[tool.poetry.scripts]my-script = "my_module:main"</code></pre><ul><li>模板文件</li></ul><pre class=" language-toml"><code class="language-toml">[tool.poetry]name = "poetry-setup"version = "0.3.6"description = "make setup.py (setutools) from pyproject.toml (poetry)"authors = [    "Gram Orsinium <master_fess@mail.ru>"]license = "Apache-2.0"readme = "README.md"homepage = "https://github.com/orsinium/poetry-setup"repository = "https://github.com/orsinium/poetry-setup"keywords = ["packaging", "dependency", "poetry", "setuptools", "pip"]classifiers = [    "Development Status :: 4 - Beta",    "Environment :: Console",    "Topic :: Software Development :: Build Tools",    "Topic :: Software Development :: Libraries :: Python Modules"][tool.poetry.dependencies]python = "^3.4"autopep8 = "*"jinja2 = "*"poetry = "*"yapf = "*"[tool.poetry.dev-dependencies]pytest = "*"[tool.poetry.scripts]poetry-setup = "poetry_setup.core:main"</code></pre>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> poetry </tag>
            
            <tag> 包管理 </tag>
            
            <tag> 依赖管理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>模板工具cookiecutter</title>
      <link href="/2019/10/23/cookiecutter/"/>
      <url>/2019/10/23/cookiecutter/</url>
      
        <content type="html"><![CDATA[<blockquote><p>使用cookiecutter通过项目模板创建Python项目</p></blockquote><h2 id="安装-cookiecutter"><a href="#安装-cookiecutter" class="headerlink" title="安装 cookiecutter"></a>安装 cookiecutter</h2><pre class=" language-bash"><code class="language-bash">pip <span class="token function">install</span> cookiecutter</code></pre><p>选择项目模板 <a href="https://github.com/cookiecutter/cookiecutter/tree/db14e06a1dcc0187beeafde72685c3acef93eb68#a-pantry-full-of-cookiecutters" target="_blank" rel="noopener">A Pantry Full of Cookiecutters</a></p><h2 id="使用模板"><a href="#使用模板" class="headerlink" title="使用模板"></a>使用模板</h2><p>下载模板</p><pre class=" language-bash"><code class="language-bash">cookiecutter https://github.com/audreyr/cookiecutter-pypackage<span class="token comment" spellcheck="true"># 从GitHub下载模板</span>cookiecutter gh:audreyr/cookiecutter-pypackage</code></pre><p>根据提示输入项目信息, 然后生成项目</p><blockquote><p><code>cookiecutter</code>下载的模板会保存在<code>~/.cookiecutter</code>目录下, 可以通过项目名再次使用. 项目的配置信息保存在<code>~/.cookiecutter_replay</code>目录下, 可以通过<code>--replay</code>选项从更新过的模板创建项目.</p></blockquote><p>使用本地模板</p><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 从本地生成项目</span>cookiecutter cookiecutter-pypackage</code></pre><p>重用模板</p><pre class=" language-bash"><code class="language-bash">cookiecutter --replay gh:hackebrot/cookiedozer</code></pre><p>在<code>Python</code>中使用<code>cookiecutter</code></p><pre class=" language-python"><code class="language-python"><span class="token keyword">from</span> cookiecutter<span class="token punctuation">.</span>main <span class="token keyword">import</span> cookiecutter<span class="token comment" spellcheck="true"># Create project from the cookiecutter-pypackage/ template</span>cookiecutter<span class="token punctuation">(</span><span class="token string">'cookiecutter-pypackage/'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># Create project from the cookiecutter-pypackage.git repo template</span>cookiecutter<span class="token punctuation">(</span><span class="token string">'https://github.com/audreyr/cookiecutter-pypackage.git'</span><span class="token punctuation">)</span></code></pre><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><p>创建<code>~/.cookiecutterrc</code>文件, 保存一些个人信息, 下次创建项目时就可以使用默认信息</p><pre class=" language-yml"><code class="language-yml">default_context:    full_name: "Audrey Roy"    email: "audreyr@gmail.com"    github_username: "audreyr"cookiecutters_dir: "~/.cookiecutters/"</code></pre><p>通过<code>--config-file</code>指定配置文件</p><pre class=" language-bash"><code class="language-bash">cookiecutter --config-file /home/audreyr/my-custom-config.yaml cookiecutter-pypackage</code></pre><p>或者设置系统变量<code>COOKIECUTTER_CONFIG</code></p><pre class=" language-bash"><code class="language-bash"><span class="token function">export</span> COOKIECUTTER_CONFIG<span class="token operator">=</span>/home/audreyr/my-custom-config.yaml</code></pre><h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p><code>cookiecutter</code>使用<code>Jinja2</code>语法将<code>cookiecutter.json</code>文件中的变量<code>name</code>替换模板文件中所有被双<code>{}</code>包裹的标签(可以是文件名, 目录名, 文件内的字符串), 然后生成项目.</p><h2 id="创建模板"><a href="#创建模板" class="headerlink" title="创建模板"></a>创建模板</h2><p>项目结构</p><pre class=" language-bash"><code class="language-bash">cookiecutter-something/├── <span class="token punctuation">{</span><span class="token punctuation">{</span>cookiecutter.project_slug<span class="token punctuation">}</span><span class="token punctuation">}</span>/├── hooks│   ├── pre_gen_project.py│   └── post_gen_project.py└── cookiecutter.json</code></pre><ul><li><code>cookiecutter.json</code> - 设置配置变量, 变量的值也可以使用<code>Jinja2</code>语法标记, 如</li></ul><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>  <span class="token property">"project_name"</span><span class="token operator">:</span> <span class="token string">"My New Project"</span><span class="token punctuation">,</span>  <span class="token property">"project_slug"</span><span class="token operator">:</span> "<span class="token punctuation">{</span><span class="token punctuation">{</span> cookiecutter.project_name|lower|replace(' '<span class="token punctuation">,</span> '-'<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>"<span class="token punctuation">,</span>  <span class="token property">"pkg_name"</span><span class="token operator">:</span> "<span class="token punctuation">{</span><span class="token punctuation">{</span> cookiecutter.project_slug|replace('-'<span class="token punctuation">,</span> ''<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>"<span class="token punctuation">}</span></code></pre><ul><li><code>hooks/</code> - 生成项目时会执行<code>hooks</code>文件内的脚本</li></ul><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># hooks/pre_gen_project.py</span><span class="token keyword">import</span> re<span class="token keyword">import</span> sysMODULE_REGEX <span class="token operator">=</span> r<span class="token string">'^[_a-zA-Z][_a-zA-Z0-9]+$'</span>module_name <span class="token operator">=</span> <span class="token string">'{{ cookiecutter.module_name }}'</span><span class="token keyword">if</span> <span class="token operator">not</span> re<span class="token punctuation">.</span>match<span class="token punctuation">(</span>MODULE_REGEX<span class="token punctuation">,</span> module_name<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'ERROR: %s is not a valid Python module name!'</span> <span class="token operator">%</span> module_name<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># exits with status 1 to indicate failure</span>    sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span></code></pre><ul><li>其他地方按照正常方法创建项目, 然后将需要替换的地方用<code>Jinja2</code>语法标签标记即可</li></ul><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><p><a href="https://cookiecutter.readthedocs.io/en/latest/" target="_blank" rel="noopener">cookiecutter.readthedocs.io</a></p></li><li><p><a href="https://raphael.codes/blog/create-your-own-cookiecutter-template/" target="_blank" rel="noopener">Create a new cookiecutter template project</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> template </tag>
            
            <tag> cookiecutter </tag>
            
            <tag> jinja2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PostgreSQL Windows 安装</title>
      <link href="/2019/10/21/postgresql-install/"/>
      <url>/2019/10/21/postgresql-install/</url>
      
        <content type="html"><![CDATA[<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p><a href="https://www.enterprisedb.com/downloads/postgres-postgresql-downloads" target="_blank" rel="noopener">官网地址</a></p><h2 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h2><ul><li>创建数据库集群</li></ul><pre class=" language-bash"><code class="language-bash">initdb -D <span class="token string">"K:\PostgreSQL\data"</span></code></pre><ul><li>启动数据库服务器</li></ul><pre class=" language-bash"><code class="language-bash">pg_ctl -D ^<span class="token string">"K^:^\PostgreSQL^\data^"</span> -l logfile start</code></pre><ul><li>注册Windows服务</li></ul><pre class=" language-bash"><code class="language-bash">pg_ctl register -N PostgreSQL -D <span class="token string">"K:\PostgreSQL\data"</span></code></pre><ul><li>注销Windows服务</li></ul><pre class=" language-bash"><code class="language-bash">pg_ctl unregister -N PostgreSQL</code></pre><h2 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h2><ul><li>客户端连接</li></ul><pre class=" language-bash"><code class="language-bash">psql -d postgres</code></pre>]]></content>
      
      
      <categories>
          
          <category> Database </category>
          
      </categories>
      
      
        <tags>
            
            <tag> install </tag>
            
            <tag> postgresql </tag>
            
            <tag> windows </tag>
            
            <tag> database </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用tesserocr库识别图形验证码</title>
      <link href="/2019/10/14/tesserocr/"/>
      <url>/2019/10/14/tesserocr/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><ul><li>Tesseract-OCR, 一款由Google维护的开源OCR引擎, 可用于图像识别</li><li>tesserocr, Python的OCR识别库, 基于Tesseract-OCR做的Python API封装</li></ul><h2 id="安装Tesseract-OCR"><a href="#安装Tesseract-OCR" class="headerlink" title="安装Tesseract-OCR"></a>安装Tesseract-OCR</h2><ul><li><a href="https://digi.bib.uni-mannheim.de/tesseract/" target="_blank" rel="noopener">下载Tesseract-OCR</a></li><li>将Tesseract-OCR安装路径添加到系统环境变量中</li></ul><h2 id="使用Tesseract-OCR识别验证码"><a href="#使用Tesseract-OCR识别验证码" class="headerlink" title="使用Tesseract-OCR识别验证码"></a>使用Tesseract-OCR识别验证码</h2><p><img src="https://github.com/lin-zone/lin-zone.github.io/blob/hexo/source/images/phototest.png?raw=true" alt="phototest.png"></p><pre class=" language-sh"><code class="language-sh">tesseract phototest.png result</code></pre><p><img src="https://github.com/lin-zone/lin-zone.github.io/blob/hexo/source/images/phototest.png?raw=true" alt="result.png"></p><h2 id="使用conda安装tesserocr"><a href="#使用conda安装tesserocr" class="headerlink" title="使用conda安装tesserocr"></a>使用conda安装tesserocr</h2><pre class=" language-sh"><code class="language-sh"># conda install -c simonflueckiger tesserocr, 默认版本会出错conda install -c simonflueckiger/label/tesseract-4.0.0-master tesserocr</code></pre><p>添加系统环境变量(改为Tesseract-OCR的安装路径)</p><pre class=" language-sh"><code class="language-sh">TESSDATA_PREFIX=C:\Program Files (x86)\Tesseract-OCR\tessdata\</code></pre><h2 id="使用tesserocr库识别验证码"><a href="#使用tesserocr库识别验证码" class="headerlink" title="使用tesserocr库识别验证码"></a>使用tesserocr库识别验证码</h2><pre class=" language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">import</span> tesserocr<span class="token operator">>></span><span class="token operator">></span> text <span class="token operator">=</span> tesserocr<span class="token punctuation">.</span>file_to_text<span class="token punctuation">(</span><span class="token string">'phototest.png'</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span>This <span class="token keyword">is</span> a lot of <span class="token number">12</span> point text to test thecor code <span class="token operator">and</span> see <span class="token keyword">if</span> it works on all typesof file format<span class="token punctuation">.</span>The quick brown dog jumped over thelazy fox<span class="token punctuation">.</span> The quick brown dog jumpedover the lazy fox<span class="token punctuation">.</span> The quick brown dogjumped over the lazy fox<span class="token punctuation">.</span> The quickbrown dog jumped over the lazy fox<span class="token punctuation">.</span></code></pre><h2 id="GitHub仓库"><a href="#GitHub仓库" class="headerlink" title="GitHub仓库"></a>GitHub仓库</h2><p><a href="https://github.com/sirfz/tesserocr" target="_blank" rel="noopener">sirfz/tesserocr</a></p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tesseract </tag>
            
            <tag> tesserocr </tag>
            
            <tag> 识别验证码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 项目开发实战</title>
      <link href="/2019/09/21/python-project-dev/"/>
      <url>/2019/09/21/python-project-dev/</url>
      
        <content type="html"><![CDATA[<h2 id="Python-开发环境"><a href="#Python-开发环境" class="headerlink" title="Python 开发环境"></a>Python 开发环境</h2><p>依赖管理工具</p><ul><li><code>pip</code></li><li><code>conda</code></li><li><code>poetry</code></li></ul><p>项目模板工具</p><ul><li><code>cookiecutter</code></li></ul><p>命令行工具</p><ul><li><code>click</code></li></ul><p>日志管理</p><ul><li><code>loguru</code></li></ul><p>版本管理</p><ul><li><code>Git</code></li></ul><p>编辑器和DEBUG工具</p><ul><li><code>Vim</code></li><li><code>PyCharm</code></li><li><code>VS Code</code></li><li><code>IPython</code></li><li><code>Jupyter</code></li><li><code>pytest</code></li></ul><h2 id="Web-开发"><a href="#Web-开发" class="headerlink" title="Web 开发"></a>Web 开发</h2><p>框架</p><ul><li><code>Flask</code></li><li><code>Django</code></li></ul><h2 id="Python-项目结构"><a href="#Python-项目结构" class="headerlink" title="Python 项目结构"></a>Python 项目结构</h2><p>Python 项目</p><ul><li>拥有一个在版本管理之下的源码目录</li><li>程序信息在setup.py中定义</li><li>在虚拟环境下运行</li></ul><p>文件结构</p><ul><li><code>setup.py</code></li><li><code>MANIFEST.in</code></li><li><code>dist/</code> - 源码程序包</li><li><code>README.md</code> - 项目介绍</li><li><code>requirements.txt</code> - 记录环境依赖</li></ul><h2 id="团队开发工具"><a href="#团队开发工具" class="headerlink" title="团队开发工具"></a>团队开发工具</h2><p>Git服务器</p><ul><li><code>Gitea</code></li></ul><p>项目管理系统</p><ul><li><code>Taiga</code></li></ul><p>聊天系统</p><ul><li><code>Slack</code></li></ul><h2 id="项目管理与审查"><a href="#项目管理与审查" class="headerlink" title="项目管理与审查"></a>项目管理与审查</h2><h2 id="使用Git管理源码"><a href="#使用Git管理源码" class="headerlink" title="使用Git管理源码"></a>使用Git管理源码</h2><h2 id="项目文档"><a href="#项目文档" class="headerlink" title="项目文档"></a>项目文档</h2><ul><li><code>Sphinx</code></li><li><code>MkDocs</code></li></ul><h2 id="模块分割设计与单元测试"><a href="#模块分割设计与单元测试" class="headerlink" title="模块分割设计与单元测试"></a>模块分割设计与单元测试</h2><p>设计模式</p><p>测试模块</p><ul><li><code>pytest</code></li><li><code>unittest</code></li><li><code>testfixtures</code></li><li><code>pytest-cov</code></li><li><code>xunit</code></li><li><code>pdb</code></li><li><code>mock</code></li><li><code>faker</code></li><li><code>tox</code></li></ul><h2 id="持续集成"><a href="#持续集成" class="headerlink" title="持续集成"></a>持续集成</h2><ul><li><code>Jenkins</code></li><li><code>Travis CI</code></li></ul><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><ul><li><code>Linux</code></li><li><code>Nginx</code></li><li><code>gunicorn</code></li><li><code>MySQL</code></li></ul><h2 id="自动化部署"><a href="#自动化部署" class="headerlink" title="自动化部署"></a>自动化部署</h2><ul><li><code>Ansible</code></li><li>备份</li></ul><h2 id="改善性能"><a href="#改善性能" class="headerlink" title="改善性能"></a>改善性能</h2><p>性能评估</p><ul><li><code>ApacheBench</code></li></ul><p>提高性能</p><ul><li><code>gunicorn</code></li><li><code>Nginx</code></li></ul>]]></content>
      
      
      <categories>
          
          <category> 开发实战 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Graphviz和Pyreverse绘制Python项目结构图</title>
      <link href="/2019/07/17/graphviz-pyreverse/"/>
      <url>/2019/07/17/graphviz-pyreverse/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><ul><li><p><code>Graphviz</code>开源的图形绘制工具包</p></li><li><p><code>Pyreverse</code>分析Python代码和类关系的工具</p></li></ul><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ol><li><p>安装<code>Graphviz</code> <a href="http://www.graphviz.org/download/" target="_blank" rel="noopener">官网下载地址</a></p><p> 注意添加<code>bin/</code>目录的路径到系统路径, 测试是否安装成功</p><pre class=" language-bash"><code class="language-bash"> dot --help</code></pre></li><li><p>安装<code>Pyreverse</code></p><p> 现在<code>pyreverse</code>已经集成到<code>pylint</code>, 直接安装<code>pylint</code>即可</p><pre class=" language-bash"><code class="language-bash"> pip <span class="token function">install</span> pylint</code></pre><p> 测试是否安装成功</p><pre class=" language-bash"><code class="language-bash"> pyreverse --help</code></pre></li><li><p>使用<code>Pyreverse</code>分析Python代码</p><p> 以<code>flask/</code>代码为例</p><pre class=" language-bash"><code class="language-bash"> pyreverse flask/</code></pre><p> <code>pyreverse</code>会分析<code>flask</code>文件的代码并在当前目录下生成<code>classes.dot</code>和<code>packages.dot</code>两个<code>dot</code>格式的文件</p></li><li><p>使用<code>Graphviz</code>将<code>dot</code>文件转换为图形格式</p><p> 转换为<code>png</code>格式</p><pre class=" language-bash"><code class="language-bash"> dot -Tpng -o classes.png classes.dot dot -Tpng -o packages.png packages.dot</code></pre><p> 也可以转换为<code>jpg</code>和<code>pdf</code>格式</p><pre class=" language-bash"><code class="language-bash"> dot -Tjpg -o classes.jpg classes.dot dot -Tpdf -o packages.pdf packages.dot</code></pre><p> 生成的图形如下所示</p><p> <img src="https://github.com/lin-zone/lin-zone.github.io/blob/hexo/source/images/packages.png?raw=true" alt></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> graphviz </tag>
            
            <tag> pyreverse </tag>
            
            <tag> python </tag>
            
            <tag> uml </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用hexo搭建个人博客</title>
      <link href="/2019/07/17/hexotutorial/"/>
      <url>/2019/07/17/hexotutorial/</url>
      
        <content type="html"><![CDATA[<p>准备工作</p><ul><li>Node.js</li><li>npm</li><li>Git</li><li>GitHub账号</li></ul><h2 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h2><h3 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h3><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> -g hexo</code></pre><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><p><code>lin-zone</code>改为自己的GitHub账号</p><pre class=" language-bash"><code class="language-bash">hexo init lin-zone.github.io<span class="token function">cd</span> lin-zone.github.io<span class="token function">npm</span> <span class="token function">install</span></code></pre><h3 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h3><pre class=" language-bash"><code class="language-bash">hexo server</code></pre><p>访问 <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a></p><p>配置<code>_config_yml</code></p><pre class=" language-yml"><code class="language-yml">title: #网站标题subtitle: #网站副标题author: #作者名字</code></pre><p>生成静态文件</p><pre class=" language-bash"><code class="language-bash">hexo generate</code></pre><h3 id="部署到GitHub"><a href="#部署到GitHub" class="headerlink" title="部署到GitHub"></a>部署到GitHub</h3><p>在GitHub新建<code>lin-zone.github.io</code>仓库</p><p>配置<code>_config.yml</code></p><pre class=" language-yml"><code class="language-yml">deploy:  type: git  repository: git@github.com:lin-zone/lin-zone.github.io.git  branch: master</code></pre><p>安装插件</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-deployer-git --save</code></pre><p>提交到GitHub</p><pre class=" language-bash"><code class="language-bash">hexo deploy</code></pre><p>访问 <a href="https://lin-zone.github.io/">https://lin-zone.github.io/</a></p><h3 id="新建文章"><a href="#新建文章" class="headerlink" title="新建文章"></a>新建文章</h3><pre class=" language-bash"><code class="language-bash">hexo new hexotutorial<span class="token comment" spellcheck="true"># 编辑文章</span><span class="token comment" spellcheck="true"># 提交</span>hexo cleanhexo ghexo d</code></pre><h2 id="高级配置"><a href="#高级配置" class="headerlink" title="高级配置"></a>高级配置</h2><h3 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h3><p>安装 hexo-theme-matery</p><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/blinkfox/hexo-theme-matery themes/matery</code></pre><p>安装插件</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> i -S hexo-prism-plugin<span class="token function">npm</span> <span class="token function">install</span> hexo-generator-search --save<span class="token function">npm</span> i hexo-permalink-pinyin --save<span class="token function">npm</span> i --save hexo-wordcount<span class="token function">npm</span> <span class="token function">install</span> hexo-generator-feed --save</code></pre><h3 id="git分支进行多终端工作"><a href="#git分支进行多终端工作" class="headerlink" title="git分支进行多终端工作"></a>git分支进行多终端工作</h3><p>添加分支<code>hexo</code>, 上传文件</p><p>在仓库的<code>settings</code>中选择默认分支为<code>hexo</code>分支</p><h4 id="在另一个终端"><a href="#在另一个终端" class="headerlink" title="在另一个终端"></a>在另一个终端</h4><p>安装<code>hexo</code></p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-cli -g</code></pre><p>克隆文件, 安装依赖</p><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> clone git@github.com:lin-zone/lin-zone.github.io.git<span class="token function">cd</span> lin-zone.github.io<span class="token function">npm</span> <span class="token function">install</span><span class="token function">npm</span> <span class="token function">install</span> hexo-deployer-git --save</code></pre><p>生成, 部署</p><pre class=" language-bash"><code class="language-bash">hexo ghexo d</code></pre><p>可能错误</p><p><code>INFO No layout: index.html</code></p><p>原因</p><p>直接在<code>themes</code>文件下克隆主题造成仓库嵌套, <code>git</code>不会上传嵌套的仓库</p><p>解决</p><p>删除<code>.git</code>文件并删除缓存</p><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> <span class="token function">rm</span> --cached themes/matery</code></pre>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
